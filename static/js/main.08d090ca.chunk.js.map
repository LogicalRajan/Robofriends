{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Errorboundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Errorboundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfields","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAeeA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCsBLK,EA5BE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GAKpC,OACA,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOb,OACI,8BACKH,KCNEI,EAZG,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC5B,OACI,qBAAKX,UAAU,MAAf,SACI,uBACAA,UAAU,gCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEPI,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SAEKJ,EAAMK,YCmBJC,E,kDAtBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAS,GAHC,E,8DAOAC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAKzB,OAAGG,KAAKJ,MAAMC,SACH,4DAGPG,KAAKX,MAAMK,a,GAlBKQ,aC4DbC,E,kDAvDX,aAAc,IAAD,8BACT,gBAoBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,aAAcD,EAAME,OAAOC,SApB1C,EAAKZ,MAAO,CACRnB,OAAO,GACP6B,aAAa,IAJR,E,gEASO,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GACH,OAAOA,EAASC,UAElBF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAAExB,OAAOoC,S,+BAatB,IAAD,EAC0Bb,KAAKJ,MAA5BnB,EADH,EACGA,OAAO6B,EADV,EACUA,aACRQ,EAAiBrC,EAAOsC,QAAO,SAAAC,GACjC,OAAQA,EAAM9C,KAAK+C,cAAcC,SAASZ,EAAaW,kBAI3D,OAAqB,IAAlBxC,EAAO0C,OACC,oBAAI9C,UAAU,KAAd,+BAGP,sBAAKA,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAFlC,IAGI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQqC,e,GA7CxBZ,aCMHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCEdO,IAASC,OAIP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.08d090ca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return (\r\n        <div className=\" tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from \"./Card.js\";\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        \r\n        // if(true){\r\n        //     throw new Error(\"No way! you have done this mistake.\")\r\n        // }\r\n        return (\r\n        <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n        />)\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    )\r\n\r\n    // // or we can do it in return \r\n    // return (\r\n    //     <div>\r\n    //         <h1>{}</h1>\r\n    //     </div>\r\n    // );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) =>{\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input\r\n            className=\"pa3 b--green bg-lightest-blue\"\r\n            type=\"search\" \r\n            placeholder=\"search robots\"\r\n            onChange={searchChange}\r\n            />\r\n         </div>\r\n    )\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: \"scroll\", border: \"2px solid black\", height: \"800px\" }}>\r\n            {/* console.log(\"hello harshit\"); */}\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;\r\n\r\n","import React,{Component} from 'react';\r\n\r\nclass Errorboundary extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError: true})\r\n\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops! there is an error.</h1>\r\n        }\r\n        return(\r\n            this.props.children\r\n        )\r\n    }\r\n}\r\n\r\nexport default Errorboundary;","import React,{Component} from 'react';\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport Errorboundary from '../components/Errorboundary';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            robots:[],\r\n            searchfields:''\r\n        }\r\n        // console.log(\"constructor\");\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>{\r\n           return response.json();\r\n        })\r\n        .then(users=>{\r\n            this.setState({ robots:users})\r\n        })\r\n        // console.log(\"Good Morning Rajan!\");\r\n        // console.log(\"componentDidMount\");\r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfields: event.target.value})\r\n        // console.log(filteredRobots);\r\n        // console.log(event.target.value);\r\n        \r\n\r\n    }\r\n    render(){\r\n        const {robots,searchfields} = this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n            return (robot.name.toLowerCase().includes(searchfields.toLowerCase()))\r\n            \r\n        })\r\n        // console.log(\"render\");\r\n        if(robots.length === 0){\r\n            return <h1 className=\"tc\">Loading..........</h1>\r\n        }else{  \r\n            return (\r\n            <div className=\"tc\">\r\n                <h1>Robofriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>,\r\n                <Scroll>\r\n                    <Errorboundary>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Errorboundary>\r\n                </Scroll>\r\n                \r\n            </div>\r\n        )}\r\n      \r\n    }\r\n   \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./containers/App.js\";\nimport \"tachyons\";\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}